@startuml class diagram

interface DataProvider{
 + void printData()
}
class World{
 - boolean isOpen
 - Client client
 + World()
 + void main()
 + void open()
 + void close()
 - void start()
 - void printMenu()
 - void clearTerminal()
 - void printWelcome()
 - void printOptions()
 - void manageInput(int input)
 - void registerAsClient()
 - void manageSurveyCreation()
 - void openSurvey()
 - void showResults()
 - void invalidOption()
 - boolean existingClient()
}
class Client{
 - String name
 - Survey survey

 + Client(String name)
 + String getName()
 + Survey getSurvey()
 + void createSurvey()
 + void openSurvey()
 + void showSurvey()
}
class Survey{
 - boolean isOpen
 - List<Day> week

 + Survey()
 + void open()
 + void close()
 - void printMenu()
 - void clearTerminal()
 - void printInstructions()
 - void printOptions()
 - void manageInput(int input)
 - void createDay(Day day, int index)
 - void openDay(int index)
 + void showDays()
 - void invalidOption()
}
class Day{}
class Brunch{}
class Food{}
class Nutrient{}
class Node<T>{}
class List<T>{}


World -- Client : has
Client -- Survey : has
Survey -- "1..*" Day : has
Survey .. List : uses
Day .. List : uses
Day -- "1..*" Brunch : has
Day .. DataProvider
Brunch .. List : uses
Brunch -- "1..*" Food : has
Brunch .left. DataProvider
Food .. List : uses
Food -- "1..*" Nutrient : has
Food .left. DataProvider
' Tree -- Node : has
List -- Node : has
@enduml